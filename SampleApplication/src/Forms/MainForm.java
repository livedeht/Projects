/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import java.awt.Component;
import java.awt.GridLayout;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author LiveDehT
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        iSeats = new javax.swing.JTextField();
        cbAdjacent = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        cEvents = new javax.swing.JComboBox<>();
        bFind = new javax.swing.JButton();
        bSave = new javax.swing.JButton();
        bClear = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pSeats = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        miNew = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Seats");

        cbAdjacent.setText("Adjacent");
        cbAdjacent.setAlignmentY(0.0F);
        cbAdjacent.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        cbAdjacent.setIconTextGap(20);
        cbAdjacent.setMargin(new java.awt.Insets(0, 0, 2, 2));

        jLabel2.setText("Event");
        jLabel2.setToolTipText("");

        cEvents.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Movie 1", "Movie 2", "Movie 3", "Movie 4" }));
        cEvents.setName(""); // NOI18N
        cEvents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cEventsActionPerformed(evt);
            }
        });

        bFind.setText("Find Seats");
        bFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFindActionPerformed(evt);
            }
        });

        bSave.setText("Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });

        bClear.setText("Clear");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(153, 153, 153));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("SCREEN");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pSeatsLayout = new javax.swing.GroupLayout(pSeats);
        pSeats.setLayout(pSeatsLayout);
        pSeatsLayout.setHorizontalGroup(
            pSeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 617, Short.MAX_VALUE)
        );
        pSeatsLayout.setVerticalGroup(
            pSeatsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(pSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addComponent(pSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        jMenu1.setText("File");

        miNew.setText("New Booking");
        miNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewActionPerformed(evt);
            }
        });
        jMenu1.add(miNew);

        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        jMenu1.add(miExit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbAdjacent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cEvents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(iSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bFind)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bSave)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bClear)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cEvents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(iSeats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbAdjacent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bFind)
                    .addComponent(bSave)
                    .addComponent(bClear))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFindActionPerformed
        FindSeating();
    }//GEN-LAST:event_bFindActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        SaveSeating();
    }//GEN-LAST:event_bSaveActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        LoadSeating();
    }//GEN-LAST:event_bClearActionPerformed

    private void cEventsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cEventsActionPerformed
        selection = (String)cEvents.getSelectedItem();
        setMovie(selection);
    }//GEN-LAST:event_cEventsActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_miExitActionPerformed

    private void miNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewActionPerformed
        LoadSeating();
    }//GEN-LAST:event_miNewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    
    private Boolean[][] Movie1;
    private Boolean[][] Movie2;
    private Boolean[][] Movie3;
    private Boolean[][] Movie4;
    private String selection;
    private Boolean[][] seating;
    
    private void setMovie(String selection)
    {
        switch(selection)
        {
            case "Movie 1" : {
                if (Movie1 == null)
                    Movie1 = new Boolean[10][20];
                seating = Movie1;
            } break;
            case "Movie 2" : {
                if (Movie2 == null)
                    Movie2 = new Boolean[10][20];
                seating = Movie2;
            } break;
            case "Movie 3" : {
                if (Movie3 == null)
                    Movie3 = new Boolean[10][20];
                seating = Movie3;
            } break;
            case "Movie 4" : {
                if (Movie4 == null)
                    Movie4 = new Boolean[10][20];
                seating = Movie4;
            } break;
            default : ; break;
        }
        LoadSeating();
    }
    
    //Load all the stored values and generate checkboxes for user interaction
    private void LoadSeating()
    {
        //Don't allow loading if there is nothing
        if (seating == null)
            return;
        
        pSeats.removeAll();
        pSeats.setLayout(new GridLayout(10, 20));
        JPanel rowPanel = new JPanel();
        int x = 50;
        int y = 50;
        JCheckBox cb;
        for (int i = 0; i < seating.length; i++) {
            for (int j = 0; j < seating[i].length; j++) {                
                if (seating[i][j] == null)
                    seating[i][j] = false;
                cb = new JCheckBox("", seating[i][j]);
                cb.setEnabled(!seating[i][j]);
                cb.setSize(20, 20);
                rowPanel = new JPanel();
                rowPanel.add(cb);
                pSeats.add(rowPanel);
            }
        }
        pSeats.revalidate();
        pSeats.repaint();
    }
    
    private void SaveSeating()
    {
        //Don't allow saving if there is nothing
        if (seating == null)
            return;
        
        for (int i = 0; i < pSeats.getComponentCount(); i++)
        {
            Component p = pSeats.getComponent(i);
            if (p instanceof JPanel)
            {
                Component c = ((JPanel) p).getComponent(0);
                if (((JCheckBox)c).isSelected())
                    System.out.println(i);
                
                if (i > 19)
                {
                    int x = (i/20);
                    int y = i%20;
                    
                    seating[x][y] = ((JCheckBox)c).isSelected();
                }
                else
                {
                    seating[0][i] = ((JCheckBox)c).isSelected();
                }
            }
        }
        
        LoadSeating();
    }
    
    private void FindSeating()
    {
        //Don't allow saving if there is nothing
        if (seating == null)
            return;
        
        int req;
        int row = 0;
        int adj = 0;
        
        try
        {
            req = Integer.parseInt(iSeats.getText());
        }
        catch(java.lang.NumberFormatException nfe)
        {
            JOptionPane.showMessageDialog(this, "Invalid seats value.");
            return;
        }
            
        
        for (int i = 0; i < pSeats.getComponentCount(); i++)
        {
            Component p = pSeats.getComponent(i);
            if (p instanceof JPanel)
            {
                JCheckBox c = (JCheckBox)((JPanel) p).getComponent(0);
                
                if ((i/20) != row)
                    adj = 0;
                
                row = (i/20);
                
                if (cbAdjacent.isSelected())
                {
                    if (!c.isSelected())
                        adj += 1;
                    else
                        adj = 0;
                }
                else
                {
                    if (!c.isSelected())
                    {
                        c.setSelected(true);
                        req -= 1;
                    }
                }
                
                if (req == 0)
                    return;
                else
                if (adj == req)
                {
                    for (int t = 0; t < adj; t++)
                        ((JCheckBox)((JPanel)pSeats.getComponent(i - t)).getComponent(0)).setSelected(true);
                    return;
                }
            }
        }
        
        if (req > 0)
        {
            JOptionPane.showMessageDialog(this, "No available seats match the criteria.");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClear;
    private javax.swing.JButton bFind;
    private javax.swing.JButton bSave;
    private javax.swing.JComboBox<String> cEvents;
    private javax.swing.JCheckBox cbAdjacent;
    private javax.swing.JTextField iSeats;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miNew;
    private javax.swing.JPanel pSeats;
    // End of variables declaration//GEN-END:variables
}
